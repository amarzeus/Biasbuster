name: Biasbuster CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  NODE_VERSION: 16
  AI_SERVICE: mock

jobs:
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        run: npm run lint
        
      - name: Check file structure
        run: |
          # Check if critical files exist
          for file in package.json tsconfig.json README.md
          do
            if [ ! -f "$file" ]; then
              echo "❌ Missing critical file: $file"
              exit 1
            fi
          done
          
          # Check if critical directories exist
          for dir in src prompts
          do
            if [ ! -d "$dir" ]; then
              echo "❌ Missing critical directory: $dir"
              exit 1
            fi
          done
          
          echo "✅ All critical files and directories present"

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        
    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test
        env:
          AI_SERVICE: mock
          
      - name: Test prompt loading
        run: |
          if [ -f "prompts/biasbusterPrompt.txt" ]; then
            echo "✅ Found bias analysis prompt file"
          else
            echo "❌ Missing prompt file"
            exit 1
          fi

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build TypeScript
        run: npm run build
        
      - name: Verify build output
        run: |
          if [ -d "dist" ]; then
            echo "✅ Build successful - dist directory created"
            if [ -f "dist/index.js" ]; then
              echo "✅ Main entry point exists"
            else
              echo "❌ Main entry point is missing"
              exit 1
            fi
          else
            echo "❌ Build failed - dist directory not created"
            exit 1
          fi
          
      - name: Cache build output
        uses: actions/cache@v3
        with:
          path: dist
          key: ${{ runner.os }}-dist-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-dist-
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: server-dist
          path: dist/

  chrome-extension:
    name: Chrome Extension Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Validate Chrome Extension
        run: |
          if [ -d "chrome-extension" ]; then
            echo "✅ Chrome Extension folder exists"
            
            # Check manifest
            if [ -f "chrome-extension/manifest.json" ]; then
              echo "✅ manifest.json exists"
              # Validate manifest format
              if jq empty chrome-extension/manifest.json 2>/dev/null; then
                echo "✅ manifest.json is valid JSON"
              else
                echo "❌ manifest.json is not valid JSON"
                exit 1
              fi
            else
              echo "❌ manifest.json is missing"
              exit 1
            fi
            
            # Check content scripts
            if [ -d "chrome-extension/content_scripts" ]; then
              echo "✅ content_scripts directory exists"
              if [ -f "chrome-extension/content_scripts/content.js" ] && [ -f "chrome-extension/content_scripts/highlighter.css" ]; then
                echo "✅ Content scripts exist"
              else
                echo "❌ Content scripts are missing"
                exit 1
              fi
            else
              echo "❌ content_scripts directory is missing"
              exit 1
            fi
            
            # Check popup
            if [ -d "chrome-extension/popup" ]; then
              echo "✅ popup directory exists"
              if [ -f "chrome-extension/popup/popup.html" ] && [ -f "chrome-extension/popup/popup.js" ] && [ -f "chrome-extension/popup/popup.css" ]; then
                echo "✅ Popup files exist"
              else
                echo "❌ Popup files are missing"
                exit 1
              fi
            else
              echo "❌ popup directory is missing"
              exit 1
            fi
            
            # Check icons
            if [ -d "chrome-extension/icons" ]; then
              echo "✅ icons directory exists"
              if [ -f "chrome-extension/icons/icon128.png" ]; then
                echo "✅ Icon files exist"
              else
                echo "❌ Icon files are missing"
                exit 1
              fi
            else
              echo "❌ icons directory is missing"
              exit 1
            fi
            
            echo "✅ Chrome Extension validation passed"
          else
            echo "❌ Chrome Extension folder is missing"
            exit 1
          fi
      
      - name: Package Chrome Extension
        run: |
          mkdir -p extension-package
          cp -r chrome-extension/* extension-package/
          cd extension-package
          zip -r ../biasbuster-extension.zip *
          cd ..
          echo "✅ Chrome Extension packaged successfully"
      
      - name: Upload Extension Package
        uses: actions/upload-artifact@v3
        with:
          name: chrome-extension
          path: biasbuster-extension.zip

  web-platform:
    name: Web Platform Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Validate Web Platform
        run: |
          if [ -d "web-platform" ]; then
            echo "✅ Web Platform folder exists"
            
            # Check HTML
            if [ -f "web-platform/index.html" ]; then
              echo "✅ index.html exists"
            else
              echo "❌ index.html is missing"
              exit 1
            fi
            
            # Check CSS
            if [ -f "web-platform/style.css" ]; then
              echo "✅ style.css exists"
            else
              echo "❌ style.css is missing"
              exit 1
            fi
            
            # Check JS
            if [ -f "web-platform/script.js" ]; then
              echo "✅ script.js exists"
            else
              echo "❌ script.js is missing"
              exit 1
            fi
            
            echo "✅ Web Platform validation passed"
          else
            echo "❌ Web Platform folder is missing"
            exit 1
          fi
      
      - name: Package Web Platform
        run: |
          mkdir -p web-package
          cp -r web-platform/* web-package/
          cd web-package
          zip -r ../biasbuster-web.zip *
          cd ..
          echo "✅ Web Platform packaged successfully"
      
      - name: Upload Web Platform Package
        uses: actions/upload-artifact@v3
        with:
          name: web-platform
          path: biasbuster-web.zip

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3
      - name: Dependency Review
        uses: actions/dependency-review-action@v2

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v3
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
          
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        
  release-prep:
    name: Prepare Release
    runs-on: ubuntu-latest
    needs: [build, chrome-extension, web-platform]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - uses: actions/checkout@v3
      
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        
      - name: Prepare release package
        run: |
          mkdir -p release-package
          cp -r server-dist release-package/server
          cp chrome-extension/biasbuster-extension.zip release-package/
          cp web-platform/biasbuster-web.zip release-package/
          cp README.md release-package/
          cp LICENSE release-package/
          cp start-server.bat release-package/
          cp start-server.sh release-package/
          echo "✅ Release package prepared"
          
      - name: Create Release Archive
        run: |
          zip -r biasbuster-release.zip release-package
          
      - name: Upload Release Package
        uses: actions/upload-artifact@v3
        with:
          name: release-package
          path: biasbuster-release.zip
          
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: biasbuster-release.zip
          name: Biasbuster ${{ github.ref_name }}
          draft: false
          prerelease: false
          
  pages-deploy:
    name: Deploy Web Platform to GitHub Pages
    runs-on: ubuntu-latest
    needs: [web-platform]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    # Add permission for GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    # Allow only one concurrent deployment
    concurrency:
      group: pages
      cancel-in-progress: true
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Download web platform artifact
        uses: actions/download-artifact@v3
        with:
          name: web-platform
          path: web-download
          
      - name: Unzip web platform
        run: |
          mkdir -p _site
          unzip web-download/biasbuster-web.zip -d _site
          
      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
        
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2 